[데이터 베이스]
- 관련 데이터 모임
- 한 조직의 여러 응용 시스템들이 데이터를 공유할 수 있도록 통합, 저장된 운영데이터 집합체
<특징>
1. 실시간 접근 가능
2. 동적으로 변화
3. 동시에 공유
4. 내용에 의한 참조 가능
<정의>
1. 공유 
2. 통합
3. 저장
4. 운영


[테이블(릴레이션)]
- 행과 열로 구성된 2차원의 표 형태
세로열 - 필드(속성, 열 어트리뷰트) column
가로열 - 레코드(투플, 행) row

[데이터 베이스 관리 시스템]
- 데이터 베이스를 관리하는 시스템 소프트웨어, MySQL등
<장점> 
1. 중복 최소화
2. 데이터 독립성

<파일 시스템 단점>
1. 중복성
2. 종속성 - 프로그램이 변경되면 데이터도 변경해야함

<구성요소>
-데이터 베이스, 하드웨어, DBMS, 사용자

사용자 <-> 하드웨어 <-> DBMS <-> 데이터 베이스

사용자
1. 데이터 베이스 관리자(DBA)
2. 응용 프로그래머
3. 일반 사용자

<DBA> 역할
1. DB시스템의 구성요소 선정
2. 구조 정의
3. 저장 구조와 접근법 결정
4. 무결성 유지를 위한 제약 조건 정의
5. 보안 및 접근 권한 정책 결정
6. 백업 및 회복 기법 정의
7. 시스템 DB 관리
8. 시스템 성능 감시 및 분석
9. DB 재구성
10. DB 관련 의견 조정과 분쟁 해결

[데이터 언어(SQL)]
- 정의어(DDL) - Data Definition Language
1. CREATE - 데이터 생성 - CREATE TABLE
2. ALTER - 테이블 수정 - ALTER TABLE
3. DROP - 테이블 삭제 - DROP TABLE

-조작어(DML) - Manipulation
1. INSERT - 데이터 입력
2. UPDATE - 데이터 수정
3. DELETE - 데이터 삭제
4. SELECT - 데이터 조회

-제어어(DCL) - Control
1. GRANT
2. REVOKE

[스키마(Schema)]
- 데이터베이스를 구성하는 구조와 제약조건에 대한 명세를 기술한 것

<3단계 구조>
외부 스키마 - 개념 스키마 - 내부 스키마 - 데이터베이스

<데이터 독립성>
- 논리적 데이터 독립성 { 사용자 <-> 외부/개념 스키마 }
- 물리적 데이터 독립성 { 외부/개념 스키마 <-> 개념/내부 스키마 }

[키]
1. 기본기(PRIMARY KEY)
- 각 투플을 유일하게 구별할 수 있는 하나 이상의 속성의 집합
- 중복 불가
- 필수 입력

2. 외래키(FOREIGN KEY)
- 한 릴레이션의 기본키를 참조하는 키
- 참조되는 릴레이션의 기본키 값에 반드시 존재해야 한다.
- 널값 입력 허용, 참조무결성 제약조건
*참조하는 테이블의 외래키 값은 참조되는 테이블의 기본키 값과 같다.

3. 슈퍼키
- 유일성

[관계형 데이터 모델]
<용어>
1. 릴레이션 - 하나의 테이블을 의미하며, 테이블은 여러 튜플(행)과 속성(열)로 구성
- 동일한 투플 존재 X - 유일성
- 투플 순서 무의미 - 무순서성
- 속성 순서 무의미 - 무순서성
- 속성 값으로 원자 값만 사용 가능

2. 속성(attribute) - 열(column)**을 의미하며, 특정 속성을 나타내는 이름, 예: 이름, 나이, 주소 등.
3. 투플(tuple) - 하나의 **행(row)**을 의미하며, 데이터의 개별 레코드
4. 도메인(domain) - 어떤 속성에 허용될 수 있는 값들의 범위,  일관성과 정확성을 유지
5. 차수(degree) - 속성(열)의 개수
6. 카디날리티(cardinality) - 튜플(행)의 개수


[뷰(view)]
- 가상의 테이블
장점 : 사용의 편의성, 보안

DROP TABLE 테이블명;
DROP VIEW 뷰 이름; 

# 뷰 생성
CREATE VIEW 뷰이름
as
 SELECT
 FROM


[데이터 모델]
<3요소>
1. 데이터 구조 - 저장 형태 표현
2. 연산 - 데이터 처리 방식 표현
3. 제약 조건 - 데이터 저장시 구조적 제약 사항 및 연산시 제약사항 표현

[널 값]
- 알려지지 않은 값
ex) insert into(이름, 소속팀) values(이주형, 키움)
    insert into(이름, 소속팀, 포지션) values(이정후, 샌프란시스코, 51)

[자동증가(auto_increment)]
- 기본 키(Primary Key)로 사용되는 정수형 컬럼에 주로 적용됩니다.
- 자동으로 1씩 증가하는 정수 값이 저장됩니다.
- 개발자가 일일이 고유한 값을 관리할 필요 없이 중복 없는 고유 값이 생성됩니다.
- 삭제된 값은 재사용되지 않으며, 계속 증가합니다. (단, 일부 DBMS는 재사용 옵션을 제공)

[입력, 수정, 삭제]
SET SQL_SAFE_UPDATES = 0; (세이프 모드 해제)

<수정>
UPDATE 테이블 명
SET 필드 명 = 수정 후 값
WHERE 필드명 = 데이터값;

<삭제>
SELECT 필드명
FROM 테이블 명
WHERE 필드명 = 데이터값;





